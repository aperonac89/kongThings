services:
  db:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
  kong-database-migrations:
    image: kong:latest
    container_name: kong-database-migrations
    command: kong migrations bootstrap && kong migrations up
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: kong
    depends_on:
        - db
  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: info
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMING_GUI_URL: http://localhost:8002
      KONG_OPENTELEMETRY_TRACING: all
      KONG_OPENTELEMETRY_TRACING_SAMPLING_RATE: 1.0
    ports:
    - "8000:8000"
    - "8443:8443"
    - "8001:8001"
    - "8444:8444"
    - "8002:8002"
    - "8445:8445"
    - "8003:8003"
    - "8004:8004"
    depends_on: 
        - db
        - kong-database-migrations


  opentelemetry:
    image: otel/opentelemetry-collector-contrib:0.117.0
    container_name: opentelemetry
    ports:
      - 4318:4318
    command: ["--config=/etc/otel-colector-config.yaml"]
    volumes:
      - ./otel.yaml:/etc/otel-colector-config.yaml

  loki: 
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
  
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - 4138:4138
      - 3200:3200   # Tempo query endpoint
    volumes:
      - ./tempo-local-config.yaml:/etc/tempo/local-config.yaml
    command: -config.file=/etc/tempo/local-config.yaml

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"


  echo-server:
    image: ealen/echo-server:latest
    restart: always
    environment:
      - ENABLE__ENVIRONMENT=false
    ports:
      - 6969:80