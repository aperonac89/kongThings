volumes: 
  kong_db_data: {}

networks:
  kong-net:
    driver: bridge

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_HOST: kong-database
  KONG_PG_DATABASE: ${POSTGRES_DB}
  KONG_PG_USER: ${POSTGRES_USER}
  KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
  KONG_LICENSE_DATA: "${KONG_LICENSE_DATA}"

services:
  kong-database:
    image: ${POSTGRES_IMAGE}
    container_name: kong-database
    restart: on-failure
    volumes: 
      - ${VOLUME_DB}:/var/lib/postgresql/data
    networks:
      - ${NETWORK_NAME}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "5432:5432"
    
  kong-bootstrap:
    image: ${GW_IMAGE}
    container_name: kong-bootstrap
    restart: on-failure
    networks:
      - ${NETWORK_NAME}
    environment:
      <<: *kong-env                 # Reuse environment config from x-kong-config
      KONG_PASSWORD: ${KONG_PASSWORD}    # Admin GUI password (required for RBAC)
    depends_on:
      kong-database:
        condition: service_healthy
    command: "kong migrations bootstrap"

  kong-cp:
    image: ${GW_IMAGE}
    container_name: kong-cp
    restart: on-failure
    networks:
      - ${NETWORK_NAME}
    environment: 
      <<: *kong-env
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl  # Admin API on HTTP + HTTPS
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl  # Kong Manager on HTTP + HTTPS
      KONG_ADMIN_GUI_URL: http://${GW_HOST}:8002  # URL for GUI links
      KONG_PASSWORD: ${KONG_PASSWORD}  # Required for logging in to Kong Manager (RBAC)
      KONG_TRACING_INSTRUMENTATIONS: all
      KONG_TRACING_SAMPLING_RATE: 1.0
      KONG_LOG_LEVEL: debug
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
    ports:
      - "8000:8000"  # Proxy HTTP
      - "8443:8443"  # Proxy HTTPS
      - "8001:8001"  # Admin API HTTP
      - "8444:8444"  # Admin API HTTPS
      - "8002:8002"  # Kong Manager HTTP
      - "8445:8445"  # Kong Manager HTTPS

  http-bin:
    image: kennethreitz/httpbin
    container_name: http-bin
    restart: on-failure
    networks:
      - ${NETWORK_NAME}
    ports:
      - "8080:80"

  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    networks:
      - ${NETWORK_NAME}
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # Jaeger Thrift over UDP
      - "14268:14268"  # Jaeger Collector HTTP

  otel-collector:
    image: otel/opentelemetry-collector:0.106.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - ${NETWORK_NAME}
    ports:
      - "4317:4317"  # OTLP gRPC receiver
      - "4318:4318"  # OTLP HTTP receiver
